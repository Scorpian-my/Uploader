#–––––––––––––––––––––––
#Source Uploader Rubika Version 1.2
#t.me/Dev_Scorpian
#–––––––––––––––––––––––
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))
